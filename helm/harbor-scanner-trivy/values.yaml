nameOverride: ""
fullnameOverride: ""

image:
  registry: docker.io
  repository: aquasec/harbor-scanner-trivy
  tag: 0.9.0
  pullPolicy: IfNotPresent

replicaCount: 1

persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 5Gi

resources:
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 1
    memory: 1Gi

podSecurityContext:
  runAsUser: 1000
  runAsNonRoot: true
  fsGroup: 1000

securityContext:
  privileged: false
  readOnlyRootFilesystem: true

scanner:
  logLevel: info
  api:
    tlsEnabled: false
    tlsCertificate: ""
    tlsKey: ""
    readTimeout: "15s"
    writeTimeout: "15s"
    idleTimeout: "60s"
  trivy:
    cacheDir: "/home/scanner/.cache/trivy"
    reportsDir: "/home/scanner/.cache/reports"
    # debugMode the flag to enable Trivy debug mode
    debugMode: false
    # vulnType a comma-separated list of vulnerability types. Possible values are `os` and `library`.
    vulnType: "os,library"
    # severity a comma-separated list of vulnerabilities severities to be displayed
    severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
    # ignoreUnfixed the flag to display only fixed vulnerabilities
    ignoreUnfixed: false
    # skipUpdate the flag to enable or disable Trivy DB downloads from GitHub
    #
    # You might want to enable this flag in test or CI/CD environments to avoid GitHub rate limiting issues.
    # If the flag is enabled you have to manually download the `trivy.db` file and mount it in the
    # `/home/scanner/.cache/trivy/db/trivy.db` path (see `cacheDir`).
    skipUpdate: false
    # gitHubToken the GitHub access token to download Trivy DB
    #
    # Trivy DB contains vulnerability information from NVD, Red Hat, and many other upstream vulnerability databases.
    # It is downloaded by Trivy from the GitHub release page https://github.com/aquasecurity/trivy-db/releases and cached
    # in the local file system (`/home/scanner/.cache/trivy/db/trivy.db`). In addition, the database contains the update
    # timestamp so Trivy can detect whether it should download a newer version from the Internet or use the cached one.
    # Currently, the database is updated every 12 hours and published as a new release to GitHub.
    #
    # Anonymous downloads from GitHub are subject to the limit of 60 requests per hour. Normally such rate limit is enough
    # for production operations. If, for any reason, it's not enough, you could increase the rate limit to 5000
    # requests per hour by specifying the GitHub access token. For more details on GitHub rate limiting please consult
    # https://developer.github.com/v3/#rate-limiting
    #
    # You can create a GitHub token by following the instructions in
    # https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
    gitHubToken: ""
    # insecure the flag to skip verifying registry certificate
    insecure: false
  store:
    redisURL: "redis://harbor-harbor-redis:6379"
    redisNamespace: "harbor.scanner.trivy:store"
    redisPoolMaxActive: 5
    redisPoolMaxIdle: 5
    redisScanJobTTL: "1h"
  jobQueue:
    redisURL: "redis://harbor-harbor-redis:6379"
    redisNamespace: "harbor.scanner.trivy:job-queue"
    redisPoolMaxActive: 5
    redisPoolMaxIdle: 5
    workerConcurrency: 1

service:
  type: ClusterIP
  port: 8080

# httpProxy the URL of the HTTP proxy server
httpProxy:
# httpsProxy the URL of the HTTPS proxy server
httpsProxy:
# noProxy the URLs that the proxy settings do not apply to
noProxy:
